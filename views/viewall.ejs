<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard - Task Manager</title>
  <style>
    /* Basic styling */
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      margin: 0;
      padding: 10px;
    }
    
    .container {
      background-color: white;
      padding: 10px;
      border-radius: 8px;
      max-width: 500px;
      margin: 0 auto;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }
    
    h1 {
      text-align: center;
      margin-bottom: 20px;
    }
    
    label {
      display: block;
      margin: 10px 0 5px;
    }
    
    input[type="text"], select {
      width: 100%;
      padding: 10px;
      margin-bottom: 20px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    
    button {
      padding: 10px 20px;
      color: white;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    
    ul {
      list-style-type: none;
      padding: 0;
    }
    
    .task {
      background-color: #ffffff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
      margin-top: 20px;
    }

    .task h1, .task h2, .task h3 {
      margin: 0 0 10px;
    }

    .task button {
      padding: 8px 16px;
      font-size: 14px;
      border-radius: 4px;
      font-weight: bold;
      cursor: pointer;
      margin-right: 10px;
      transition: background-color 0.3s ease;
    }

    .task .update-btn {
      background-color: #007bff;
      border: none;
    }

    .task .update-btn:hover {
      background-color: #0056b3;
    }

    .task .delete-btn {
      background-color: #dc3545;
      border: none;
    }

    .task .delete-btn:hover {
      background-color: #c82333;
    }

    .save-btn:hover {
        background-color: #c82333;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Dashboard</h1>

    <!-- Filter tasks by status
    <select id="task-filter">
      <option value="all">All Tasks</option>
      <option value="Pending">Pending</option>
      <option value="In Progress">In Progress</option>
      <option value="Completed">Completed</option>
    </select> -->

    <!-- Task list -->
    <ul id="task-list">
      <% tasks.forEach(task => { %>
        <li class="task" data-id="<%= task.id %>">
          <h1><%= task.title %></h1>
          <h2><%= task.description %></h2>
          <h3>Status: <%= task.status %></h3>
          <button class="update-btn" onclick="openEditForm(<%= task.id %>)">Update</button>
          <button class="delete-btn" onclick="deleteTask(<%= task.id %>)">Delete</button>
        </li>
      <% }) %>
    </ul>

    <!-- Button to add new task -->
    <a href="/" class="add-task-btn">+ Add New Task</a>
  </div>

  <!-- Edit Task Form (Popup) -->
  <div id="edit-task-form" style="display:none;">
    <h2>Edit Task</h2>
    <label for="edit-title">Title:</label>
    <input type="text" id="edit-title">
    <label for="edit-description">Description:</label>
    <input type="text" id="edit-description">
    <label for="edit-status">Status:</label>
    <select id="edit-status">
      <option value="Pending">Pending</option>
      <option value="In Progress">In Progress</option>
      <option value="Completed">Completed</option>
    </select>
    <button id="save-btn">Save</button>
    <button onclick="closeEditForm()">Cancel</button>
  </div>

  <script>
    // Function to delete a task
    function deleteTask(id) {
      if (confirm("Are you sure you want to delete this task?")) {
        fetch(`/delete/${id}`, {
          method: 'DELETE',
        })
        .then(response => response.json())
        .then(data => {
          if (data.message === "Task deleted successfully") {
            alert("Task deleted successfully!");
            document.querySelector(`.task[data-id='${id}']`).remove();
          } else {
            alert("Failed to delete the task.");
          }
        })
        .catch(error => {
          console.error("Error deleting task:", error);
          alert("An error occurred while deleting the task.");
        });
      }
    }

    // Function to open the edit form and populate it with task data
    function openEditForm(id) {
      const taskElement = document.querySelector(`.task[data-id='${id}']`);
      document.getElementById('edit-title').value = taskElement.querySelector('h1').innerText;
      document.getElementById('edit-description').value = taskElement.querySelector('h2').innerText;
      document.getElementById('edit-status').value = taskElement.querySelector('h3').innerText.split(': ')[1];

      document.getElementById('edit-task-form').style.display = 'block';
      document.getElementById('save-btn').onclick = function() {
        updateTask(id);
      };
    }

    // Function to close the edit form
    function closeEditForm() {
      document.getElementById('edit-task-form').style.display = 'none';
    }

    // Function to update a task
    function updateTask(id) {
      const title = document.getElementById('edit-title').value;
      const description = document.getElementById('edit-description').value;
      const status = document.getElementById('edit-status').value;

      fetch(`/update/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ title, description, status })
      })
      .then(response => response.json())
      .then(data => {
          alert("Task updated successfully!");
          const taskElement = document.querySelector(`.task[data-id='${id}']`);
          taskElement.querySelector('h1').innerText = title;
          taskElement.querySelector('h2').innerText = description;
          taskElement.querySelector('h3').innerText = `Status: ${status}`;
          closeEditForm();
      })
      .catch(error => {
        console.error("Error updating task:", error);
        alert("An error occurred while updating the task.");
      });
    }
  </script>
</body>
</html>
